/* Todo Application Styling */

/* Main todo page layout */
.todo-page {
  min-height: 100vh;
  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
  padding: var(--spacing-4);
}

.todo-container {
  max-width: 800px;
  margin: 0 auto;
  background: var(--color-background);
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow-xl);
  overflow: hidden;
  position: relative;
}

/* Header section */
.todo-header {
  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));
  color: white;
  padding: var(--spacing-8);
  position: relative;
  overflow: hidden;
}

.todo-header::before {
  content: '';
  position: absolute;
  top: -50%;
  right: -50%;
  width: 200%;
  height: 200%;
  background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E") repeat;
  animation: float 20s infinite linear;
  pointer-events: none;
}

@keyframes float {
  0% { transform: translateX(0) translateY(0); }
  100% { transform: translateX(-60px) translateY(-60px); }
}

.header-content {
  position: relative;
  z-index: 1;
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  gap: var(--spacing-4);
}

.header-title {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-1);
}

.header-title h1 {
  font-size: var(--font-size-4xl);
  font-weight: 700;
  margin: 0;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.header-subtitle {
  font-size: var(--font-size-lg);
  opacity: 0.9;
  font-weight: 400;
  margin: 0;
}

.header-actions {
  display: flex;
  gap: var(--spacing-3);
  align-items: center;
}

.logout-button {
  background: rgba(255, 255, 255, 0.2);
  color: white;
  border: 1px solid rgba(255, 255, 255, 0.3);
  padding: var(--spacing-2) var(--spacing-4);
  border-radius: var(--radius-md);
  font-size: var(--font-size-sm);
  font-weight: 500;
  transition: all var(--transition-fast);
  backdrop-filter: blur(10px);
}

.logout-button:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: translateY(-1px);
}

/* Add task section */
.add-task-section {
  padding: var(--spacing-8);
  border-bottom: 1px solid var(--color-border-light);
  background: var(--color-background-secondary);
}

.add-task-form {
  display: flex;
  gap: var(--spacing-3);
  align-items: flex-end;
  flex-wrap: wrap;
}

.add-task-input-group {
  flex: 1;
  min-width: 250px;
}

.add-task-input-group label {
  display: block;
  font-weight: 500;
  color: var(--color-text-primary);
  margin-bottom: var(--spacing-2);
  font-size: var(--font-size-sm);
}

.add-task-input {
  width: 100%;
  padding: var(--spacing-4);
  font-size: var(--font-size-base);
  border: 2px solid var(--color-border);
  border-radius: var(--radius-md);
  transition: all var(--transition-base);
  background: var(--color-background);
}

.add-task-input:focus {
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px rgb(79 70 229 / 0.1);
  outline: none;
}

.add-task-input::placeholder {
  color: var(--color-text-tertiary);
}

.add-task-button {
  padding: var(--spacing-4) var(--spacing-8);
  background: linear-gradient(135deg, var(--color-secondary), #0891b2);
  color: white;
  border: none;
  border-radius: var(--radius-md);
  font-weight: 600;
  font-size: var(--font-size-base);
  cursor: pointer;
  transition: all var(--transition-base);
  white-space: nowrap;
  display: flex;
  align-items: center;
  gap: var(--spacing-2);
}

.add-task-button:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

.add-task-button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

/* Tasks section */
.tasks-section {
  padding: var(--spacing-8);
}

.tasks-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-6);
  flex-wrap: wrap;
  gap: var(--spacing-4);
}

.tasks-title {
  font-size: var(--font-size-2xl);
  font-weight: 600;
  color: var(--color-text-primary);
  margin: 0;
}

.tasks-count {
  background: var(--color-primary);
  color: white;
  padding: var(--spacing-1) var(--spacing-3);
  border-radius: var(--radius-lg);
  font-size: var(--font-size-sm);
  font-weight: 500;
}

.bulk-actions {
  display: flex;
  gap: var(--spacing-3);
  align-items: center;
}

.mark-all-done-button {
  background: var(--color-warning);
  color: white;
  border: none;
  padding: var(--spacing-3) var(--spacing-6);
  border-radius: var(--radius-md);
  font-weight: 500;
  font-size: var(--font-size-sm);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.mark-all-done-button:hover:not(:disabled) {
  background: #d97706;
  transform: translateY(-1px);
}

/* Todo list */
.todo-list {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-3);
}

.todo-item {
  background: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-lg);
  padding: var(--spacing-5);
  transition: all var(--transition-base);
  position: relative;
  overflow: hidden;
}

.todo-item:hover {
  border-color: var(--color-primary-light);
  box-shadow: var(--shadow-md);
  transform: translateY(-1px);
}

.todo-item.completed {
  background: var(--color-background-secondary);
  border-color: var(--color-success);
}

.todo-item.completed::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 4px;
  height: 100%;
  background: var(--color-success);
}

.todo-content {
  display: flex;
  align-items: center;
  gap: var(--spacing-4);
  flex: 1;
}

.todo-checkbox {
  width: 20px;
  height: 20px;
  border: 2px solid var(--color-border-dark);
  border-radius: var(--radius-sm);
  position: relative;
  cursor: pointer;
  transition: all var(--transition-fast);
  flex-shrink: 0;
}

.todo-checkbox.checked {
  background: var(--color-success);
  border-color: var(--color-success);
}

.todo-checkbox.checked::after {
  content: 'âœ“';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 12px;
  font-weight: bold;
}

.todo-text {
  flex: 1;
  font-size: var(--font-size-base);
  color: var(--color-text-primary);
  line-height: 1.5;
  transition: all var(--transition-fast);
  word-break: break-word;
}

.todo-item.completed .todo-text {
  text-decoration: line-through;
  color: var(--color-text-secondary);
}

.todo-actions {
  display: flex;
  gap: var(--spacing-2);
  align-items: center;
  opacity: 0;
  transition: opacity var(--transition-fast);
}

.todo-item:hover .todo-actions {
  opacity: 1;
}

.todo-action-button {
  padding: var(--spacing-2);
  border: none;
  border-radius: var(--radius-base);
  cursor: pointer;
  transition: all var(--transition-fast);
  font-size: var(--font-size-xs);
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: var(--spacing-1);
}

.complete-button {
  background: var(--color-success);
  color: white;
}

.complete-button:hover {
  background: var(--color-secondary-dark);
}

.undo-button {
  background: var(--color-gray-500);
  color: white;
}

.undo-button:hover {
  background: var(--color-gray-600);
}

.delete-button {
  background: var(--color-danger);
  color: white;
}

.delete-button:hover {
  background: var(--color-danger-dark);
}

/* Empty state */
.empty-state {
  text-align: center;
  padding: var(--spacing-16) var(--spacing-8);
  color: var(--color-text-secondary);
}

.empty-state-icon {
  font-size: 4rem;
  margin-bottom: var(--spacing-4);
  opacity: 0.5;
}

.empty-state h3 {
  font-size: var(--font-size-xl);
  color: var(--color-text-secondary);
  margin-bottom: var(--spacing-2);
}

.empty-state p {
  font-size: var(--font-size-base);
  color: var(--color-text-tertiary);
  margin: 0;
}

/* Error message */
.error-message {
  background: #fef2f2;
  color: var(--color-danger);
  border: 1px solid #fecaca;
  padding: var(--spacing-4);
  border-radius: var(--radius-md);
  margin-bottom: var(--spacing-6);
  font-size: var(--font-size-sm);
  display: flex;
  align-items: center;
  gap: var(--spacing-2);
}

/* Loading states */
.loading {
  opacity: 0.7;
  pointer-events: none;
}

.skeleton {
  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
  background-size: 200% 100%;
  animation: loading 1.5s infinite;
}

@keyframes loading {
  0% { background-position: 200% 0; }
  100% { background-position: -200% 0; }
}

/* Responsive design */
@media (max-width: 768px) {
  .todo-page {
    padding: var(--spacing-2);
  }
  
  .todo-header {
    padding: var(--spacing-6);
  }
  
  .header-content {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .header-title h1 {
    font-size: var(--font-size-3xl);
  }
  
  .add-task-section {
    padding: var(--spacing-6);
  }
  
  .add-task-form {
    flex-direction: column;
    align-items: stretch;
  }
  
  .add-task-input-group {
    min-width: unset;
  }
  
  .tasks-section {
    padding: var(--spacing-6);
  }
  
  .tasks-header {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .bulk-actions {
    width: 100%;
    justify-content: flex-start;
  }
  
  .todo-actions {
    opacity: 1;
  }
}

@media (max-width: 480px) {
  .todo-header {
    padding: var(--spacing-4);
  }
  
  .add-task-section, .tasks-section {
    padding: var(--spacing-4);
  }
  
  .todo-item {
    padding: var(--spacing-4);
  }
  
  .todo-content {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-2);
  }
  
  .todo-actions {
    align-self: flex-end;
  }
}

/* Focus states for accessibility */
.todo-checkbox:focus-visible {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

.todo-action-button:focus-visible {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

/* Animation for new todo items */
.todo-item {
  animation: slideInUp 0.3s ease-out;
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Task completion animation */
.todo-item.completing {
  animation: completeTask 0.5s ease-out;
}

@keyframes completeTask {
  0% { transform: scale(1); }
  50% { transform: scale(1.02); }
  100% { transform: scale(1); }
}